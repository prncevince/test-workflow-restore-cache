name: restore-cache-template
on:
  schedule:
    - cron: '*/5 * * * *'
  push:
    branches: [main]
    paths-ignore: ['**.md']
  pull_request:
    branches: [main]
    paths-ignore: ['**.md']
  workflow_dispatch:
jobs:
  restore-cache:
    if: github.event.schedule != ''
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        r: ['release']
        r-repo: ['https://packagemanager.rstudio.com/all/__linux__/focal/latest']
    steps:
      - name: Set restore key partials
        id: restore-partials
        run: |
          Rscript -e 'cat("##[set-output name=os-version;]", sessionInfo()$running, "\n", sep = "")'
          Rscript -e 'cat("##[set-output name=r-version;]", R.Version()$version.string, sep = "")'
      - uses: actions/checkout@v3
      - name: Restore renv cache
        uses: prncevince/actions-cache@prncevince/reeval
        with:
          restore-only: true
          path: ${{ runner.temp }}/renv
          key: ''
          restore-keys: __prncevince_r-actions-${{ github.workflow }}-${{ steps.restore-partials.outputs.os-version }}-${{ steps.restore-partials.outputs.r-version }}-
      - name: Restore knitr cache
        uses: prncevince/actions-cache@prncevince/reeval
        with:
          restore-only: true
          path: knitr-cache_cache
          key: ''
          restore-keys: __prncevince_r-actions_2-${{ github.workflow }}-${{ steps.restore-partials.outputs.os-version }}-${{ steps.restore-partials.outputs.r-version }}-
  rmarkdown:
    if: github.event.schedule == ''
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        r: ['release']
        r-repo: ['https://packagemanager.rstudio.com/all/__linux__/focal/latest']
    # Only runs PR jobs concurrently & uses same group as other ghpages jobs
    # PR jobs run in their own branch & do not deploy anything - so we assume they can run concurrently
    concurrency:
      group: ghpages-${{ github.event_name != 'pull_request' || github.run_id }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_CONFIG_REPOS_OVERRIDE: ${{ matrix.r-repo }}
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - name: Install system dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev
      - uses: prncevince/r-actions/setup-renv@v1.3.0
        with:
          type: 'restore'
      - uses: prncevince/r-actions/setup-knitr-cache@v1.3.0
        with:
          cache: 'knitr-cache_cache'
          cache-hash: 'knitr-cache.Rmd'
      - name: Build site
        run: Rscript build.R
      - name: Deploy to GitHub pages ðŸš€
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages
          folder: ./docs
          target-folder: .